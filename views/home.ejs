<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <style>
        body {
            margin: 0;
            padding: 0;
        }
        
        .read-message {
            font-style: italic;
            font-size: 15px;
            color: gray;
            transform: translateY(-21vh);
            margin-left: 5px;
            /* grid-row: 2; */
        }
        .chat-container {
            margin: 5px 5px 21vh 5px;
            border: 1px solid rgba(218, 230, 214, 0.897);
            padding: 5px 8px;
            border-radius: 8px;
            height: 50%;
            /* grid-row: 1; */
        }
        .chat-box {
            margin: 5px 5px;
            border: 1px solid rgba(218, 230, 214, 0.897);
            padding: 0;
            border-radius: 8px;
            bottom: 10px;
            width: 100%;
            height: 14vh;
            position: fixed;
            /* background-color: rgba(150, 217, 236, 0.4); */
        }
        .form-label {
            font: 15px bold;
            background-color: white;
            padding-left: 10px;
            margin-top: 0;
            transform: translateY(-5px);
            border-radius: 8px 8px 0 0;
        }

        .chat-box .form-label {
            width: 100%; /* Set the width to cover the entire chat-box */
            height: 20px;
            background-color: white; /* Set the background color to white */
            /* bottom: 100px; */
            /* Add any other desired styles */
        }
        .typing {
            position: fixed;
            bottom: 18vh;
        }

        .top-bar-container {
            display: flex;
            justify-content: space-around;
            text-align: center;
            width: auto;
            height: 20%;
            background-color: rgb(248, 161, 217);
            padding-top: 14px;
            padding-left: 10px;
            padding-right: 10px;
            /* position: fixed; */
        }
        a {
            margin-top: 3px;
            height: 100% - 14px;
            width: 10vw;
            /* padding-top: 14px; */
            padding-left: 10px;
            padding-right: 10px;
            text-decoration: none;
            /* border: 2px solid black; */
            color: black;
            font-size: 15px;
            font-weight:1000;
        }
        a:hover {
            background-color: rgb(241, 109, 195);
            color: black;
            font-size: 15px;
            font-weight:1000;
            border-radius: 10px;
        }

        @media screen and (max-width: 390px) {
            .left, .main, .right {
                width: 100%; /* The width is 100%, when the viewport is 800px or smaller */
            }
            h4 {
                font-size: 10px;
                font-weight: 800;
                width: 20vw;
            }
        }
        
    </style>
</head>
<body>
    <div class="top-bar-container">
        <h4>ยินดีต้อนรับ <%= curUser %></h4>
        <a class="delete-all-msg-btn" href="/delete_all_msg">Delete</a>
        <a class="logout-btn" href="/logout">Logout</a>
    </div>
    

    <div class="chat-block">
        <div class="chat-container">
            <% chat_rows.forEach((chat_row) => { %>
                <div class="message-chat">
                    <p><%= chat_row.username %> <%= chat_row.date.toISOString().split("T")[0] %> | <%= chat_row.time %></p>
                    <p class="chat-message" style="background-color: 
                    <% if (chat_row.username === 'อู๋|สามีของมิลิน') { %>
                        rgb(187, 238, 252)
                    <% } else { %>
                        rgb(252, 187, 240)
                    <% } %>"><%= chat_row.message %></p>
                    
                </div>
            <% }) %>
        </div>
        
        <div class="typing" id="typing"></div>
        <div class="read-message" id="read_message"></div> 
    </div>

    <div class="mb-3 chat-box" style="background-color: 
                <% if (curUser === 'อู๋|สามีของมิลิน') { %>
                    rgba(187, 238, 252, 0.7)
                <% } else { %>
                    rgba(252, 187, 240, 0.7)
                <% } %>">
        <form class="chat-form" id="chat_form">
            <label for="message" class="form-label">Message</label>
            <input type="text" class="form-control" id="name" name="name" value="<%= curUser %>" hidden/>
            <input type="text" class="form-control" id="message" name="message"/>
            <button type="button" class="btn btn-primary" id="btn_send">Send</button>
            <button type="button" class="btn btn-secondary" id="btn_read">อ่านเเล้ว</button>
        </form>
    </div>
    
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.4/socket.io.js"></script>
    <script>
        // (function conenct() {
        const socket = io();
        const chat_form = document.getElementById('chat_form');
        const sendBtn = document.getElementById('btn_send');
        const message = document.getElementById('message');
        const name = document.getElementById('name');
        const btn_read = document.getElementById('btn_read');
        const read_message = document.getElementById('read_message');
        //_______________ Read Image ______________
        // const fileInput = document.getElementById('imageInput');
    //     fileInput.addEventListener('change', (event) => {
    //     const file = event.target.files[0];
    //     const reader = new FileReader();
    //     reader.onload = function (event) {
    //         const imageBase64 = event.target.result;
    //         socket.emit('image', imageBase64);
    //     };
    //     reader.readAsDataURL(file);
    // });

        // _______________________________________

        sendBtn.addEventListener('click', e => {
            read_message.textContent = '';

            if (message.value) {
                const currentDateTime = new Date();
                const payload = {
                    username: name.value,
                    message: message.value,
                    date: currentDateTime.toLocaleDateString(),
                    separate: " | ",
                    time: currentDateTime.toLocaleTimeString(),
                }

                socket.emit('send_message', payload);
                message.value = '';
            }
        });

        socket.on('receive_message', (chat_rows) => {
            const chatContainer = document.querySelector('.chat-container');
            chatContainer.innerHTML = ''; // Clear the existing messages

            chat_rows.forEach((chat_row) => {
                const DIV = document.createElement('div');
                DIV.classList.add('message-chat');

                let messageColor = '';
                if (chat_row.username === 'อู๋|สามีของมิลิน') {
                    messageColor = 'rgb(187, 238, 252)';
                }
                else {
                    messageColor = 'rgb(252, 187, 240)';
                }
                DIV.innerHTML = `
                    <p>${chat_row.username} ${chat_row.date.split("T")[0]} | ${chat_row.time}</p>
                    <p class="chat-message" style="background-color: ${messageColor}">${chat_row.message}</p>
                `
                chatContainer.appendChild(DIV);
            });
        });

        btn_read.addEventListener('click', () => {
            const readPayload = {
                username: name.value,
                readDate: new Date().toLocaleDateString(),
                readTime: new Date().toLocaleTimeString(),
            }
            socket.emit('confirm_read', readPayload);
        })

        socket.on('confirm_read', (readPayloads) => {
            const readPayload = readPayloads.readPayload;
            console.log("Already read show")

            read_message.textContent = readPayload.username + "อ่านเเล้วเมื่อ " + readPayload.readDate + " | " + readPayload.readTime;
        
        });

        let typing = document.querySelector('.typing');

        message.addEventListener('keypress', e => {
            let username = name.value;

            socket.emit('typing', {username: username});
        });

        socket.on('typing', (type_data) => {
            typing.textContent = type_data.username + " กำลังพิมพ์...";
            setTimeout(() => { typing.textContent = ''}, 5000);
        });

        window.addEventListener('DOMContentLoaded', () => {
        // Scroll the page to the bottom
        window.scrollTo(0, document.body.scrollHeight);
        });
    </script>
</body>
</html>